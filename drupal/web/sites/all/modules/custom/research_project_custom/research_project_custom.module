<?php

/**
 * Implementation of hook_block_info().
 */
function research_project_custom_block_info() {

  $blocks['research_project_custom'] = array(
    'info' => t('Research Project Custom Search'),
  );

  return $blocks;
}

/**
 * Implementation of hook_block_view().
 */
function research_project_custom_block_view($delta = '') {

  $block = array();

  switch ($delta) {
    case 'research_project_custom':
      $content = drupal_get_form('research_project_custom_search_form');

      $block['subject'] = NULL;
      $block['content'] = $content;
      break;
  }

  return $block;
}

function research_project_custom_search_form($form_state) {

  $project_status_options = array(
    'N/A' 		=> t('N/A'),
    'All' 		=> t('All'),
    'Open' 		=> t('Open'),
    'Completed' 	=> t('Completed'),
  );
  
  $form['keyword_search'] = array(
    '#type'		=> 'textfield',
    '#required'		=> FALSE,
    '#title'		=> t('Search by keyword'),
    '#default_value'	=> FALSE,
  );
  
  $form['project_code'] = array(
    '#type'		=> 'textfield',
    '#required'		=> FALSE,
    '#title'		=> t('Project Code'),
    '#default_value'	=> FALSE,
  );
  
  $form['contractor'] = array(
    '#type'		=> 'textfield',
    '#required'		=> FALSE,
    '#title'		=> t('Contractor'),
    '#default_value'	=> FALSE,
  );
  
  $form['status'] = array(
    '#type' 		=> 'select',
    '#required'		=> FALSE,
    '#title'		=> t('Project status'),
    '#default_value'	=> 0,
    'empty_option'	=> t('All'),
    'options'		=> $project_status_options
  );
  
  $form['submit_research_project_custom_facets'] = array(
    '#type'		=> 'submit',
    '#value'		=> t('Submit'),
  );
  
  return $form;
}

function research_project_custom_search_form_submit($form, &$form_state) {
  $view_name = 'research_project_search';
  $facet_count = 0;
  $facets = array();

  $view = views_get_view($view_name, $reset = FALSE);
  $path = $view->display['page_1']->display_options['path'];


  if (!empty($form_state['values']['keyword_search'])) {
    $facet_count++;

    $facets[] = array (
      'key' 	=> 'keyword',
      'facet' 	=> $form_state['values']['keyword_search'],
    );
  }

  if (!empty($form_state['values']['project_code'])) {
    $facet_count++;

    $facets[] = array (
      'key' 	=> 'keyword',
      'facet' 	=> $form_state['values']['project_code'],
    );
  }

  if (!empty($form_state['values']['contractor'])) {
    $facet_count++;

    $facets[] = array (
      'key' 	=> 'keyword',
      'facet' 	=> $form_state['values']['contractor'],
    );
  }
  
  if (!empty($form_state['values']['status'])) {
    $facet_count++;
    
    $facets[] = array (
      'key'	=> 'f[' . $facet_count .']',
      'facet'	=> 'sm_field_project_status:' . $form_state['values']['status']
    );
  }
  
  foreach ($facets as $facet) {
    $facet_filters[$facet['key']] = $facet['facet'];
  }

  drupal_goto($path, array('query' => $facet_filters));
}

function research_project_custom_top_level_terms($vocabulary) {

  $vocabularies = taxonomy_vocabulary_get_names();

  if (isset($vocabularies[$vocabulary])) {
    $vid = $vocabularies[$vocabulary]->vid;
  }
  else {
    return array();
  }

  $terms = taxonomy_get_tree($vid, $parent = 0, $max_depth = 1, $load_entities = FALSE);

  foreach ($terms as $term) {
    $options[$term->tid] = $term->name;
  }

  return $options;
}