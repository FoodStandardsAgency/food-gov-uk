<?php


/**
 *  Committee url rewrites.
 *  We need to fake the subdomains for the various committee sites.
 *  These sites map subdomains onto committee site content.
 *
 *  EG: cot.food.gov
 */

// set this constant to true if we want to do the url rewriting inside Drupal
// These rules are used to translate the committee domains to the correct paths
// The system is not compatible with fast_404 or globalredirect
define('REWRITE_COMMITTEE_URLS', TRUE);

/**
 * Returns the main site domain for rewriting non committee urls
 * @return string
 */
function local_get_site_domain(){
  return "http://www.food.gov.uk";
}
/**
 * Implements hook url inbound alter
 * @param $path
 * @param $original_path
 * @param $path_language
 */
function local_url_inbound_alter(&$path, $original_path, $path_language) {
  if (!REWRITE_COMMITTEE_URLS) return; // short circuit rewriting if disabled
  // map committee domain to the path.
  // do not include leading or trailing slash
  $path_domains = array(
    'cot.food.gov.uk' => 'committee/committee-on-toxicity',
    'cot.staging.food.gov.uk' => 'committee/committee-on-toxicity',
    'acmsf.food.gov.uk' => 'committee/acmsf',
    'acnfp.food.gov.uk'=> 'committee/acnfp',
    'acaf.food.gov.uk' => 'committee/acaf',
    'acaf.staging.food.gov.uk' => 'committee/acaf',
    'gacs.food.gov.uk'=> 'committee/gacs',
    'ssrc.food.gov.uk'=> 'committee/social-science-research-committee-ssrc',
  );
  // if $_SERVER['HTTP_HOST'] is one of the path domains, rewrite the path

  if (in_array($_SERVER['HTTP_HOST'], array_keys($path_domains))) {
    $path_base = $path_domains[$_SERVER['HTTP_HOST']];
    if (drupal_is_front_page()) {
      $original_path = '';
    }
    $path_exploded = explode('/', $original_path);
    // check that we are working with an alias here... a node url will not work.

    if (!isset($path_exploded[0]) or $path_exploded[0] != 'node' ) {
      if (strlen($path_base) < strlen($original_path) && (substr($original_path,0,strlen($path_base)) == $path_base)) {
        // we are already on a committee path.....  bad?
      }
      else {
        $path = $path_base. '/'. $original_path;
      }

      if ($source = drupal_lookup_path('source', trim($path,'/'), $path_language)) {
        $path = $source;
      }
    }
  }
}

/**
 * Implements hook_url_outbound_alter
 * @param $path
 * @param $options
 * @param $original_path
 */
function local_url_outbound_alter(&$path, &$options, $original_path) {
  if (!REWRITE_COMMITTEE_URLS) return; // short circuit rewriting if disabled
  global $user;
  $site_domain = local_get_site_domain();
  $path_domains = array(
    'cot.food.gov.uk' => 'committee/committee-on-toxicity',
    'acmsf.food.gov.uk' => 'committee/acmsf',
    'acnfp.food.gov.uk'=> 'committee/acnfp',
    'acaf.food.gov.uk' => 'committee/acaf',
    'gacs.food.gov.uk'=> 'committee/gacs',
    'ssrc.food.gov.uk'=> 'committee/social-science-research-committee-ssrc',
  );
  // only do this for non-auth users
  if (!$user->uid && !$options['external'] && !$options['absolute']) {
    // if we are already on one of the committee domains
    if (in_array($_SERVER['HTTP_HOST'], array_keys($path_domains))) {
      $path_base = $path_domains[$_SERVER['HTTP_HOST']];
      // do we want the front page?
      if ($original_path == '<front>' or !$original_path) {
        $path = '';
      }
      // make sure we have an original path, otherwise get_path_alias will revert to request... but this has issues
      else  {
        $alias = NULL;
        $path_exploded = explode('/', $original_path);
        // check that we have an internal path, and get it's alias if we need to
        if ($path_exploded[0] == 'node') {
          $alias = drupal_lookup_path('alias', $path);
        }
        if (!$alias) {
          $alias = $original_path;
        }
        // if the path we are checking is shorter than the replacement string... ignore it
        // otherwise, if our path is relative to the committee
        if (strlen($path_base) < strlen($alias) && (substr($alias,0,strlen($path_base)) == $path_base)) {
            $path = substr($alias,strlen($path_base)+1);
            $options['alias'] = $path; // set the alias flag
        }
        else if ($alias == $path_base) {
          // we are on the home page
          $path = '';
        }
        else {
          // we have a link that is not on the committee site
          // set it up relative to the main domain
          $path=$site_domain. '/'. $alias;
          $options['external'] = true;
          $options['absolute'] = true;
        }
      }
    }
    else {
      // we are on the main domain, lets look for links to committee pages
      $path_exploded = explode('/',$original_path);
      if ($path_exploded[0] == 'node') {
        $path_exploded = explode('/',drupal_lookup_path('alias', $original_path));
      }

      if ($path_exploded[0] == 'committee') {
        // search the committee array for the first 2 elements of the path
        if ($domain = array_search(implode('/',array_slice($path_exploded,0,2)),$path_domains)) {
          $committee_path = implode('/', array_slice($path_exploded,3));
          $committee[] = $domain;
          if ($committee_path) {
            $committee[] = $committee_path;
          }
          $path = 'http://'.implode('/', $committee);
          $options['external'] = true;
          $options['absolute'] = true;
        }
      }
    }
  }
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function local_form_news_node_form_alter(&$form, &$form_state, $form_id) {

  // Remove the 'England' option from Primary Nation selector on News content type, because there is no England section.
  $options = array();

  foreach ($form['field_primary_nation'][LANGUAGE_NONE]['#options'] as $key => $value) {
    if ($value != 'England') {
      $options[$key] = $value;
    }
  }

  $form['field_primary_nation'][LANGUAGE_NONE]['#options'] = $options;
}


/**
 * Implements hook_form_FORM_ID_alter().
 */
function local_form_ctools_jump_menu_alter(&$form, &$form_state, $form_id) {

  $food_hygiene_rating_schemes = array(t('Food Hygiene Rating Scheme in Wales'), t('Food Hygiene Information Scheme in Scotland'), t('Food Hygiene Rating Scheme in Northern Ireland'));

  // Use the menu title, which is provided as default option, to check this is a relevant jump menu.
  // This will break if menu titles are changed, until $food_hygiene_rating_schemes is updated.
  foreach ($form['jump']['#options'] as $key => $value) {

    if ($key === '' && in_array($value, $food_hygiene_rating_schemes)) {
      // Add label to select.
      $form['jump']['#title'] = t('Check businesses in your area');
      // Change default option
      $form['jump']['#options'][$key] = t('Select your authority');
    }
  }

}




/**
 * Implements hook_theme_registry_alter().
 */
function local_theme_registry_alter(&$theme_registry) {

  // Hide specific items in the main menu, so they don't display on the Primary Menu.
  // Add our override function, which will adjust the variables then pass them through the original function.
  if (isset($theme_registry['superfish_build'])) {
    $theme_registry['superfish_build']['function'] = 'theme_local_superfish_build';
  }
}

/**
 *  Adjust the Superfish main menu.
 *  Hide specific items in the main menu, so they don't display on the Primary Menu.
 **/
function theme_local_superfish_build($variables) {

  // Links to be hidden on Main Menu.
  // Specify which links should be Visible in the main menu
  $show_links = array(
    'Home',
    'News & updates',
    'Business & industry',
    'Enforcement & regulation',
    'Science & policy',
    'About us'
  );

  foreach ($variables['menu'] as $key => $menu_item) {
    if ($menu_item['link']['plid'] == 0 && !in_array($menu_item['link']['title'], $show_links)) {
      unset($variables['menu'][$key]);
    }
  }

  $output = theme_superfish_build($variables);
  return $output;
}

function local_form_alter(&$form, &$form_state, $form_id){
  $id = $form_id;
}

/**
 * Quick form alter to give the search forms their own unique submit button ids that do not clash with the overlay
 * @param $form
 * @param $form_state
 */
function local_form_search_block_form_alter(&$form, &$form_state, $form_id){
  $form['actions']['submit']['#id'] = drupal_html_id('submit-search_block_form');
}

/**
 * Implements hook_node_view().
 */
function local_node_view($node, $view_mode, $langcode) {
  // FAQ accordion effect.
  if ($node->type == 'faq' && $view_mode == 'full') {
    drupal_add_library('system','ui.accordion');
    drupal_add_js(drupal_get_path('module', 'local') . '/js/local.js');
  }
}


/**
 * Implements hook_node_validate.
 *
 * We need to make sure that users do not add content to the top level of the menu
 * @param $node
 * @param $form
 * @param $form_state
 */
function local_node_validate($node, $form, $form_state) {
  $menu_required_types = array(
    'document_page',
    'faq',
    'job'
  );
  $banned_plids = array('0','227');
  if (in_array($node->type,$menu_required_types)) {
    $plid = 0;
    if (isset($node->menu['parent'])) {
      $menu_parent = $node->menu['parent'][0];
      list($menu, $plid) = explode(':',$menu_parent);
    }
    if (in_array($plid, $banned_plids )) {
      form_set_error('menu', t('You must specify the location of your page in the menu'));
    }
  }
}
