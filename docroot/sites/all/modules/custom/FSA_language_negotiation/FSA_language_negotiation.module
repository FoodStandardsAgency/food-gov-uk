<?php
/**
 * @file
 * Module file for the FSA language negotiation module.
 *
 * This module allows path-based language negotiation that can be modified by
 * administrators with the appropriate permissions. It is used primarily to set
 * the paths that are to be displayed in Welsh.
 */


/**
 * Implements hook_permission().
 */
function FSA_language_negotiation_permission() {
  return array(
    'bypass translation string validation' => array(
      'title' => t('Bypass validation for translated strings'),
      'description' => t('Allows users to upload translations for strings that contain code that would normally fail validation.'),
      'restrict access' => TRUE,
    ),
  );
}


/**
 * Implements hook_menu().
 */
function FSA_language_negotiation_menu() {
  $items = array();
  // Admin page for configuring Welsh language paths
  $items['admin/config/regional/language/configure/welsh-site-section'] = array(
    'title' => 'Welsh site section language negotation',
    'description' => 'Configure settings for Welsh site section language negotiation',
    'access arguments' => array('administer languages'),
    'page callback' => 'drupal_get_form',
    'page arguments' => array('FSA_language_negotiation_admin_form'),
    'file' => 'FSA_language_negotiation.admin.inc',
  );
  return $items;
}


/**
 * Implements hook_language_negotiation_info().
 */
function FSA_language_negotiation_language_negotiation_info() {
  return array(
    'site_version' => array(
      'callbacks'   => array(
        'language' => 'FSA_language_negotiation_wales',
        'switcher' => 'FSA_language_switcher_wales',
      ),
      'weight'      => -10,
      'name'        => t('Welsh site section'),
      // NOTE: The callback cannot be in this file, unless you specifically include it.
      // Language detection runs before Drupal Bootstrap completes.
      'file'        => drupal_get_path('module', 'FSA_language_negotiation') . '/FSA_language_negotiation.inc',
      'description' => t('Determine the language from the welsh section of the site.'),
      'config' => 'admin/config/regional/language/configure/welsh-site-section',
    ),
  );
}


/**
 * Return the session language switcher block.
 */
function FSA_language_switcher_wales($type, $path) {

  global $language;
  $links     = array();
  $path_parts = explode('/', $path);

  // Only show link for node pages.
  if ($path_parts[0] != 'node' || !isset($path_parts[1]) || !is_numeric($path_parts[1]) || isset($path_parts[2])) {
    return $links;
  }

  $node = node_load($path_parts[1]);

  // Node has no translation, don't show language link.
  if (empty($node->tnid)) {
    return $links;
  }

  drupal_add_css(drupal_get_path('module', 'locale') . '/locale.css');

  $translations = translation_node_get_translations($node->tnid);

  $languages = language_list('enabled');
  $languages = $languages[1];

  foreach ($translations as $language_info) {

    $langcode = $language_info->language;

    if ($langcode != $language->language) {

      $links[$langcode] = array(
        'href'       => drupal_get_path_alias('node/' . $language_info->nid, $langcode),
        'title'      => $languages[$langcode]->native,
        'attributes' => array('class' => array('language-link')),
      );
    }
  }

  return $links;
}


/**
 * Implements hook_form_FORM_ID_alter().
 *
 * We use this hook to add an alternative validation handler to the string
 * translation edit form. We do this to allow users with a special permission to
 * bypass the normal validation for translated strings. This enables us to
 * translate strings that contain forbidden code, such as <div> tags.
 *
 * @see _FSA_language_negotiation_i18n_string_locale_translate_edit_form_validate()
 * @see FSA_language_negotiation_permission()
 */
function FSA_language_negotiation_form_i18n_string_locale_translate_edit_form_alter(&$form, $form_state) {
  // First, get rid of the existing validation function
  $key = array_search('i18n_string_locale_translate_edit_form_validate', $form['#validate']);
  if ($key !== FALSE) {
    unset($form['#validate'][$key]);
  }
  // Now add our own in its place
  if (is_callable('_FSA_language_negotiation_i18n_string_locale_translate_edit_form_validate')) {
    $form['#validate'][] = '_FSA_language_negotiation_i18n_string_locale_translate_edit_form_validate';
  }
}


/**
 * Replacement validation function for locale translate edit form
 *
 * @see FSA_language_negotiation_permission()
 * @see locale_translate_edit_form_validate()
 * @see FSA_language_negotiation_form_i18n_string_locale_translate_edit_form_alter()
 */
function _FSA_language_negotiation_i18n_string_locale_translate_edit_form_validate($form, &$form_state) {
  // If the user doesn't have permission to bypass validation, call the default
  // validation function. Otherwise don't perform any validation at all.
  if (!user_access('bypass translation string validation') && is_callable('locale_translate_edit_form_validate')) {
    locale_translate_edit_form_validate($form, $form_state);
  }
  // @todo Consider adding some very basic validation to exclude really scary
  // stuff such as PHP/SQL code. Possibly make this configurable.
}
