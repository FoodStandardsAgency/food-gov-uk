<?php
/**
 * @file
 *   Module file for the FSA password update module.
 */


/**
 * Implements hook_menu().
 */
function fsa_password_update_menu() {

  // Generates a URL that can be used by a user to update their password, eg:
  // https://admin.fsa.gov.uk/user/passwordupdate.
  // This item is used elsewhere in the module to get the URL, so it should
  // always be the FIRST element returned by this function.
  $items['user/passwordupdate'] = array(
    'title' => t('Update a password'),
    'page callback' => 'fsa_password_update_router',
    'access arguments' => array('access content'),
    'description' => t('Update a password'),
  );

  return $items;
}

/**
 * Determines where to send a user when clicking on an update password link.
 *
 * If the user is already logged in, they are redirected straight to the
 * password update page (which requires a UID).
 *
 * If they're not already logged in, they are directed to the user login page,
 * which in turn redirects them to the password update page once it has access
 * to their user ID.
 *
 * @global object $user
 *   The Drupal user object.
 */
function fsa_password_update_router() {

  // Get the global user object. We need this to determine whether the user is
  // already logged in and then to get their user ID.
  global $user;

  // This is the base of the URL that will be used. It is an absolute URL so
  // we can be sure it goes to the correct domain.
  $redirect_url = "https://admin.food.gov.uk";

  // An array to hold any options passed to the url() function below.
  $redirect_options = array();

  // The update URL. To avoid duplication, we get this from the hook_menu()
  // implementation in this module.
  $update_url = array_keys(fsa_password_update_menu());
  $update_url = array_pop($update_url);


  // If we have a $user object and the uid is greater than 0, then we know we're
  // logged in and we have a proper user ID. In this case, we redirect to the
  // URL provided by the password_policy module.
  if (!empty($user) && $user->uid > 0){
    $redirect_url = "$redirect_url/user/" . $user->uid . '/' . (module_exists('password_policy_password_tab') ? 'password' : 'edit');
  }

  // If we're not logged in, then send the user to the login page, but include
  // the password change page as the destination parameter.
  else {
    $redirect_url = "$redirect_url/user/login";
    $redirect_options['query'] = array(
      'destination' => $update_url,
    );
  }

  // Redirect the user as appropriate.
  drupal_goto(url($redirect_url, $redirect_options));
}
